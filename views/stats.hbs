
<h1>Welcome to stats</h1>
<h3>Viewing: Lifetime Solves</h3>

<a href="/">Back to solving</a>
<div id="timesSent">
{{#each data}}
    {{solve}},
{{/each }}
</div>
<div id="solveDates">
{{#each data}}
    {{date}},
{{/each }}
</div>

<canvas id="myChart" width="400" height="400"></canvas>
<script>
let times = document.getElementById('timesSent').innerText
console.log(times)
var ctx = document.getElementById("myChart");
let array = [];
 array = times.split(',').map(function(item) { 
 return parseFloat(item, 10);
});

let dates = document.getElementById('solveDates').innerText
let dateArray = [];
dateArray = dates.split(',').map(function(item) { 
 return item;
});


//function onlyUnique(value, index, self) { 
   // return self.indexOf(value) === index;
//}

//dateArray = dateArray.filter(onlyUnique);



//console.log(dateArray)




//console.log(array)
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: dateArray,
        datasets: [{
            label: 'Lifetime Solves',
            data: array,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>

